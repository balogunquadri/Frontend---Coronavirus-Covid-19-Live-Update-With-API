{"version":3,"sources":["App.jsx","Confirmed.jsx","index.js"],"names":["App","useState","confirmed","deaths","recovered","active","tests","details","setDetails","useEffect","axios","get","then","res","data","cases","catch","err","console","log","response","className","style","height","to","Confirmed","latest","setLatest","results","setResults","searchCountries","setSearchCountries","all","responseArr","lastUpdated","Date","parseInt","updated","toString","countries","filter","item","country","includes","map","i","Card","key","bg","text","margin","Img","variant","src","countryInfo","flag","Body","Title","Text","todayCases","todayDeaths","critical","textAlign","CardDeck","Footer","Form","Group","controlId","Control","type","placeholder","onChange","e","target","value","queries","columns","query","ReactDOM","render","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.d43f9f2e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nfunction App() {\n  const [details, setDetails] = useState({\n    confirmed: 0,\n    deaths: 0,\n    recovered: 0,\n    active: 0,\n    tests: 0\n  });\n  useEffect(() => {\n    axios\n      .get(\"https://corona.lmao.ninja/all\")\n      .then(res => {\n        setDetails({\n          confirmed: res.data.cases,\n          deaths: res.data.deaths,\n          recovered: res.data.recovered,\n          active: res.data.active,\n          tests: res.data.tests\n        });\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n  }, []);\n  return (\n    <div>\n      <div\n        className=\"main d-flex justify-content-center align-items-center flex-column text-center\"\n        style={{ height: \"100vh\" }}\n      >\n        <h1 className=\"display-4 mb-5\">Worldwide COVID-19 Stats</h1>\n        <Link to=\"/confirmed\" className=\"box mr-5\">\n          <h3 className=\"display-4 mb-5\">View Full Stats</h3>\n        </Link>\n\n        <div className=\"boxes d-flex\">\n          <Link to=\"/confirmed\" className=\"box mr-5\">\n            <h2>Confirmed</h2>\n            <h2>{details.confirmed}</h2>\n          </Link>\n          <Link to=\"/\" className=\"box mr-5\">\n            <h2>Deaths</h2>\n            <h2>{details.deaths}</h2>\n          </Link>\n          <Link to=\"/\" className=\"box  mr-5\">\n            <h2>Recovered</h2>\n            <h2>{details.recovered}</h2>\n          </Link>\n          <Link to=\"/\" className=\"box  mr-5\">\n            <h2>Total Tests</h2>\n            <h2>{details.tests}</h2>\n          </Link>\n          <Link to=\"/\" className=\"box\">\n            <h2>Active Case</h2>\n            <h2>{details.active}</h2>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport Columns from \"react-columns\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Confirmed() {\n  const [latest, setLatest] = useState([]);\n  const [results, setResults] = useState([]);\n  const [searchCountries, setSearchCountries] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .all([\n        axios.get(\"https://corona.lmao.ninja/all\"),\n        axios.get(\"https://corona.lmao.ninja/countries\")\n      ])\n      .then(responseArr => {\n        setLatest(responseArr[0].data);\n        setResults(responseArr[1].data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n\n  const filterCountries = results.filter(item => {\n    return searchCountries !== \"\"\n      ? item.country.includes(searchCountries)\n      : item;\n  });\n\n  const countries = filterCountries.map((data, i) => {\n    return (\n      <Card\n        key={i}\n        bg=\"light\"\n        text=\"dark\"\n        className=\"text-center\"\n        style={{ margin: \"10px\" }}\n      >\n        <Card.Img variant=\"top\" src={data.countryInfo.flag} />\n        <Card.Body>\n          <Card.Title>{data.country}</Card.Title>\n          <Card.Text>Cases {data.cases}</Card.Text>\n          <Card.Text>Deaths {data.deaths}</Card.Text>\n          <Card.Text>Recovered {data.recovered}</Card.Text>\n          <Card.Text>Today's cases {data.todayCases}</Card.Text>\n          <Card.Text>Today's deaths {data.todayDeaths}</Card.Text>\n          <Card.Text>Active {data.active}</Card.Text>\n          <Card.Text>Critical {data.critical}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  });\n\n  var queries = [\n    {\n      columns: 2,\n      query: \"min-width: 500px\"\n    },\n    {\n      columns: 3,\n      query: \"min-width: 1000px\"\n    }\n  ];\n\n  return (\n    <div>\n      <br />\n      <h2 style={{ textAlign: \"center\" }}>Covid-19 Live Stats</h2>\n      <br />\n      <CardDeck>\n        <Card\n          bg=\"secondary\"\n          text=\"white\"\n          className=\"text-center\"\n          style={{ margin: \"10px\" }}\n        >\n          <Card.Body>\n            <Card.Title>Cases</Card.Title>\n            <Card.Text>{latest.cases}</Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <small>Last updated {lastUpdated}</small>\n          </Card.Footer>\n        </Card>\n        <Card\n          bg=\"danger\"\n          text={\"white\"}\n          className=\"text-center\"\n          style={{ margin: \"10px\" }}\n        >\n          <Card.Body>\n            <Card.Title>Deaths</Card.Title>\n            <Card.Text>{latest.deaths}</Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <small>Last updated {lastUpdated}</small>\n          </Card.Footer>\n        </Card>\n        <Card\n          bg=\"success\"\n          text={\"white\"}\n          className=\"text-center\"\n          style={{ margin: \"10px\" }}\n        >\n          <Card.Body>\n            <Card.Title>Recovered</Card.Title>\n            <Card.Text>{latest.recovered}</Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <small>Last updated {lastUpdated}</small>\n          </Card.Footer>\n        </Card>\n      </CardDeck>\n      <br />\n      <Form>\n        <Form.Group controlId=\"formGroupSearch\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Search for countries\"\n            onChange={e => setSearchCountries(e.target.value)}\n          />\n        </Form.Group>\n      </Form>\n      <Columns queries={queries}>{countries}</Columns>\n    </div>\n  );\n}\n\nexport default Confirmed;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport Confirmed from \"./Confirmed.jsx\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" exact component={App} />\n\n      <Route path=\"/confirmed\" exact component={Confirmed} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}